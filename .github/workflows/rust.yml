name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
    #set up languages & cache
    - uses: actions/setup-node@v4.2.0
      with:
        cache: yarn
    - uses: actions/cache@v4
      with:
        # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
    - name: install rust
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
    #install packages & cache
    - name: install node package
      run: yarn
    - name: Install dependency on Linux
      if: runner.os == 'Linux'
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev xvfb
        version: 1.0
    - name: Install rust testing drivers
      run: cargo install tauri-driver --locked

    - name: Build
      run: yarn tauri build --debug --no-bundle

    - name: Run tests
      if: runner.os == 'Linux'
      run: |
        yarn test 
    # - name: Run tests
    #   run: cargo test --verbose
